import { Board } from "./board";

describe("Boardgame", () => {
  let board;

  beforeEach(() => {
    board = new Board();
  });

  test("returns the board", () => {
    expect(board.getBoard()).toEqual([
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
    ]);
  });

  test("places ship horizontally on the board", () => {
    board.placeShip(0, 0, board.ships[0], "horizontal");
    expect(board.getBoard()).toEqual([
      [
        "carrier",
        "carrier",
        "carrier",
        "carrier",
        "carrier",
        "",
        "",
        "",
        "",
        "",
      ],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
    ]);
  });

  test("places ship vertically on the board", () => {
    board.placeShip(0, 0, board.ships[0], "vertical");
    expect(board.getBoard()).toEqual([
      ["carrier", "", "", "", "", "", "", "", "", ""],
      ["carrier", "", "", "", "", "", "", "", "", ""],
      ["carrier", "", "", "", "", "", "", "", "", ""],
      ["carrier", "", "", "", "", "", "", "", "", ""],
      ["carrier", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
    ]);
  });

  test("attack blank square on the board", () => {
    board.receiveAttack(0, 0);
    expect(board.getBoard()).toEqual([
      ["O", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", "", "", ""],
    ]);
  });

  test("attack ship on the board", () => {
    board.placeShip(0, 0, board.ships[0], "horizontal");
    board.receiveAttack(0, 0);
    expect(board.getBoard()[0][0]).toEqual("X");
  });
});
